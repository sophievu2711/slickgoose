{"ast":null,"code":"var _jsxFileName = \"D:\\\\Lumiere\\\\Project\\\\marketing\\\\src\\\\components\\\\TopNav.tsx\";\nimport { AppBar, Box, Tab, Toolbar } from '@material-ui/core';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { Link, useLocation } from \"react-router-dom\";\nimport React from 'react';\nconst useStyles = makeStyles(theme => createStyles({\n  nav: {\n    backgroundColor: 'rgba(255, 255, 255, 255)',\n    color: \"black\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    flexWrap: \"wrap\",\n    fontWeight: 500,\n    boxShadow: \"none\"\n  },\n  root: {\n    // backgroundImage: 'url(\"./image3.png\")',\n    // height: \"100vh\",\n    background: \"#FFFFFF\" // backgroundSize: \"cover\"\n\n  }\n})); // const CSSTabs = withStyles({\n//   root: {\n//     flexGrow: 1,\n//     maxWidth: 600,\n//   }\n// })(Tabs)\n\nconst routes = [{\n  name: \"Home\",\n  to: \"/\"\n}, {\n  name: \"Our Product\",\n  to: \"/product\"\n}, {\n  name: \"About us\",\n  to: \"/about\"\n}];\n\nconst TopNav = () => {\n  const classes = useStyles(undefined);\n  const location = useLocation();\n  const idx = routes.findIndex(route => route.to === location.pathname);\n  return React.createElement(AppBar, {\n    position: \"sticky\",\n    className: classes.nav,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Box, {\n    flexGrow: 1,\n    style: {\n      padding: \"3vh 5vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    width: \"100\",\n    src: \"logo.png\",\n    alt: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))), React.createElement(Box, {\n    style: {\n      marginLeft: '0',\n      backgroundColor: 'gray'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, routes.map(route => React.createElement(Link, {\n    to: route.to,\n    style: {\n      color: \"inherit\",\n      textDecoration: \"none\"\n    },\n    key: route.to,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Tab, {\n    style: {\n      fontSize: \"1.2rem\",\n      textTransform: \"capitalize\"\n    },\n    label: route.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }))))));\n};\n\nexport default TopNav;","map":{"version":3,"sources":["D:\\Lumiere\\Project\\marketing\\src\\components\\TopNav.tsx"],"names":["AppBar","Box","Tab","Toolbar","makeStyles","createStyles","Link","useLocation","React","useStyles","theme","nav","backgroundColor","color","flexDirection","justifyContent","flexWrap","fontWeight","boxShadow","root","background","routes","name","to","TopNav","classes","undefined","location","idx","findIndex","route","pathname","padding","marginLeft","map","textDecoration","fontSize","textTransform"],"mappings":"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","sourcesContent":["import {\r\n  AppBar, Box, Tabs, Tab, Toolbar,\r\n} from '@material-ui/core';\r\nimport {\r\n  makeStyles, createStyles, Theme, withStyles,\r\n} from '@material-ui/core/styles';\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n  nav: {\r\n    backgroundColor: 'rgba(255, 255, 255, 255)',\r\n    color: \"black\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    flexWrap: \"wrap\",\r\n    fontWeight: 500,\r\n    boxShadow: \"none\",\r\n  },\r\n  root: {\r\n    // backgroundImage: 'url(\"./image3.png\")',\r\n    // height: \"100vh\",\r\n    background: \"#FFFFFF\"\r\n    // backgroundSize: \"cover\"\r\n  }\r\n}));\r\n// const CSSTabs = withStyles({\r\n//   root: {\r\n//     flexGrow: 1,\r\n//     maxWidth: 600,\r\n//   }\r\n// })(Tabs)\r\nconst routes: any[] = [{name: \"Home\", to: \"/\"}, {name: \"Our Product\", to: \"/product\"}, {name: \"About us\", to: \"/about\"}]\r\n\r\nconst TopNav: React.FC = () => {\r\n  const classes = useStyles(undefined);\r\n  const location = useLocation();\r\n  const idx = routes.findIndex(route => route.to === location.pathname);\r\n\r\n  return (\r\n    <AppBar position=\"sticky\" className={classes.nav}>\r\n      <Toolbar>\r\n        {/* <Link to=\"/\"> */}\r\n          <Box flexGrow={1} style={{ padding: \"3vh 5vh\" }}>\r\n            {/* <svg width=\"150\" height=\"32\" viewBox=\"0 0 281 45\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M19.5537 35.8721C19.5537 34.4561 19.0156 33.361 17.9395 32.5869C16.8822 31.7939 15.0225 31.1143 12.3604 30.5479C9.71712 29.9814 7.61198 29.3018 6.04492 28.5088C4.49674 27.7158 3.34505 26.7718 2.58984 25.6768C1.85352 24.5817 1.48535 23.279 1.48535 21.7686C1.48535 19.2575 2.54264 17.1335 4.65723 15.3965C6.79069 13.6595 9.50944 12.791 12.8135 12.791C16.2874 12.791 19.1006 13.6878 21.2529 15.4814C23.4242 17.2751 24.5098 19.569 24.5098 22.3633H19.2422C19.2422 20.9284 18.6286 19.6917 17.4014 18.6533C16.193 17.6149 14.6637 17.0957 12.8135 17.0957C10.9066 17.0957 9.41504 17.5111 8.33887 18.3418C7.2627 19.1725 6.72461 20.2581 6.72461 21.5986C6.72461 22.8636 7.22493 23.8171 8.22559 24.459C9.22624 25.1009 11.0293 25.7145 13.6348 26.2998C16.2591 26.8851 18.3831 27.5837 20.0068 28.3955C21.6305 29.2074 22.8294 30.1891 23.6035 31.3408C24.3965 32.4736 24.793 33.8613 24.793 35.5039C24.793 38.2415 23.6979 40.4411 21.5078 42.1025C19.3177 43.7451 16.4762 44.5664 12.9834 44.5664C10.529 44.5664 8.35775 44.1322 6.46973 43.2637C4.58171 42.3952 3.09961 41.1868 2.02344 39.6387C0.966146 38.0716 0.4375 36.3818 0.4375 34.5693H5.67676C5.77116 36.3252 6.46973 37.7223 7.77246 38.7607C9.09408 39.7803 10.8311 40.29 12.9834 40.29C14.9658 40.29 16.5518 39.8936 17.7412 39.1006C18.9495 38.2887 19.5537 37.2126 19.5537 35.8721ZM37.3105 44H32.0713V0.5H37.3105V44ZM51.4141 44H46.1748V13.3574H51.4141V44ZM45.75 5.22949C45.75 4.37988 46.0049 3.66243 46.5146 3.07715C47.0433 2.49186 47.8174 2.19922 48.8369 2.19922C49.8564 2.19922 50.6305 2.49186 51.1592 3.07715C51.6878 3.66243 51.9521 4.37988 51.9521 5.22949C51.9521 6.0791 51.6878 6.78711 51.1592 7.35352C50.6305 7.91992 49.8564 8.20312 48.8369 8.20312C47.8174 8.20312 47.0433 7.91992 46.5146 7.35352C46.0049 6.78711 45.75 6.0791 45.75 5.22949ZM72.1162 40.29C73.9854 40.29 75.6185 39.7236 77.0156 38.5908C78.4128 37.458 79.1868 36.042 79.3379 34.3428H84.2939C84.1995 36.0986 83.5954 37.7695 82.4814 39.3555C81.3675 40.9414 79.876 42.2064 78.0068 43.1504C76.1566 44.0944 74.193 44.5664 72.1162 44.5664C67.9437 44.5664 64.6208 43.1787 62.1475 40.4033C59.693 37.609 58.4658 33.7952 58.4658 28.9619V28.084C58.4658 25.1009 59.0133 22.4482 60.1084 20.126C61.2035 17.8037 62.7705 16.0007 64.8096 14.7168C66.8675 13.4329 69.2936 12.791 72.0879 12.791C75.5241 12.791 78.375 13.82 80.6406 15.8779C82.9251 17.9359 84.1429 20.6074 84.2939 23.8926H79.3379C79.1868 21.9102 78.4316 20.2865 77.0723 19.0215C75.7318 17.7376 74.0703 17.0957 72.0879 17.0957C69.4258 17.0957 67.3584 18.0586 65.8857 19.9844C64.432 21.8913 63.7051 24.6572 63.7051 28.2822V29.2734C63.7051 32.804 64.432 35.5228 65.8857 37.4297C67.3395 39.3366 69.4163 40.29 72.1162 40.29ZM98.7373 29.8115L95.4521 33.2383V44H90.2129V0.5H95.4521V26.8096L98.2559 23.4395L107.8 13.3574H114.172L102.249 26.1582L115.56 44H109.414L98.7373 29.8115Z\" fill=\"#202121\"/>\r\n              <path d=\"M151.413 38.6475C149.922 40.5921 147.854 42.0648 145.211 43.0654C142.568 44.0661 139.566 44.5664 136.205 44.5664C132.75 44.5664 129.691 43.7829 127.029 42.2158C124.367 40.6488 122.309 38.4115 120.855 35.5039C119.421 32.5775 118.675 29.1696 118.618 25.2803V22.0518C118.618 15.8213 120.11 10.9596 123.093 7.4668C126.076 3.95508 130.239 2.19922 135.582 2.19922C140.17 2.19922 143.814 3.33203 146.514 5.59766C149.214 7.86328 150.837 11.1296 151.385 15.3965H144.361C143.568 10.431 140.689 7.94824 135.724 7.94824C132.514 7.94824 130.069 9.10938 128.389 11.4316C126.727 13.735 125.868 17.124 125.812 21.5986V24.7705C125.812 29.2262 126.746 32.6908 128.615 35.1641C130.503 37.6185 133.118 38.8457 136.46 38.8457C140.123 38.8457 142.728 38.015 144.276 36.3535V28.2822H135.78V22.8447H151.413V38.6475ZM157.332 28.3955C157.332 25.3936 157.927 22.6937 159.116 20.2959C160.306 17.8792 161.977 16.029 164.129 14.7451C166.281 13.4424 168.755 12.791 171.549 12.791C175.684 12.791 179.035 14.1221 181.603 16.7842C184.189 19.4463 185.586 22.9769 185.794 27.376L185.822 28.9902C185.822 32.0111 185.237 34.7109 184.066 37.0898C182.915 39.4688 181.253 41.3096 179.082 42.6123C176.93 43.915 174.438 44.5664 171.605 44.5664C167.282 44.5664 163.817 43.1315 161.212 40.2617C158.625 37.373 157.332 33.5309 157.332 28.7354V28.3955ZM164.214 28.9902C164.214 32.1432 164.865 34.6165 166.168 36.4102C167.471 38.1849 169.283 39.0723 171.605 39.0723C173.928 39.0723 175.731 38.166 177.015 36.3535C178.317 34.541 178.969 31.8883 178.969 28.3955C178.969 25.2992 178.299 22.8447 176.958 21.0322C175.636 19.2197 173.833 18.3135 171.549 18.3135C169.302 18.3135 167.518 19.2103 166.196 21.0039C164.875 22.7786 164.214 25.4408 164.214 28.9902ZM190.354 28.3955C190.354 25.3936 190.948 22.6937 192.138 20.2959C193.327 17.8792 194.998 16.029 197.15 14.7451C199.303 13.4424 201.776 12.791 204.57 12.791C208.705 12.791 212.056 14.1221 214.624 16.7842C217.211 19.4463 218.608 22.9769 218.815 27.376L218.844 28.9902C218.844 32.0111 218.258 34.7109 217.088 37.0898C215.936 39.4688 214.275 41.3096 212.104 42.6123C209.951 43.915 207.459 44.5664 204.627 44.5664C200.303 44.5664 196.839 43.1315 194.233 40.2617C191.647 37.373 190.354 33.5309 190.354 28.7354V28.3955ZM197.235 28.9902C197.235 32.1432 197.887 34.6165 199.189 36.4102C200.492 38.1849 202.305 39.0723 204.627 39.0723C206.949 39.0723 208.752 38.166 210.036 36.3535C211.339 34.541 211.99 31.8883 211.99 28.3955C211.99 25.2992 211.32 22.8447 209.979 21.0322C208.658 19.2197 206.855 18.3135 204.57 18.3135C202.324 18.3135 200.539 19.2103 199.218 21.0039C197.896 22.7786 197.235 25.4408 197.235 28.9902ZM241.84 35.6738C241.84 34.4466 241.33 33.512 240.311 32.8701C239.31 32.2282 237.639 31.6618 235.298 31.1709C232.957 30.68 231.003 30.057 229.436 29.3018C225.999 27.6403 224.281 25.2331 224.281 22.0801C224.281 19.4368 225.395 17.2279 227.623 15.4531C229.851 13.6784 232.683 12.791 236.119 12.791C239.782 12.791 242.737 13.6973 244.983 15.5098C247.249 17.3223 248.382 19.6729 248.382 22.5615H241.5C241.5 21.2399 241.009 20.1449 240.027 19.2764C239.046 18.389 237.743 17.9453 236.119 17.9453C234.609 17.9453 233.372 18.2946 232.409 18.9932C231.465 19.6917 230.993 20.6263 230.993 21.7969C230.993 22.8542 231.437 23.6755 232.324 24.2607C233.212 24.846 235.005 25.4408 237.705 26.0449C240.405 26.6302 242.52 27.3382 244.049 28.1689C245.597 28.9808 246.739 29.9626 247.476 31.1143C248.231 32.266 248.608 33.6631 248.608 35.3057C248.608 38.0622 247.466 40.2995 245.182 42.0176C242.897 43.7168 239.905 44.5664 236.204 44.5664C233.693 44.5664 231.456 44.1133 229.492 43.207C227.529 42.3008 225.999 41.0547 224.904 39.4688C223.809 37.8828 223.262 36.1742 223.262 34.3428H229.945C230.04 35.9665 230.653 37.222 231.786 38.1094C232.919 38.9779 234.42 39.4121 236.289 39.4121C238.102 39.4121 239.48 39.0723 240.424 38.3926C241.368 37.694 241.84 36.7878 241.84 35.6738ZM268.121 44.5664C263.76 44.5664 260.22 43.1976 257.501 40.46C254.801 37.7035 253.451 34.0407 253.451 29.4717V28.6221C253.451 25.5635 254.036 22.8353 255.207 20.4375C256.396 18.0208 258.058 16.1423 260.191 14.8018C262.325 13.4613 264.704 12.791 267.328 12.791C271.501 12.791 274.72 14.1221 276.985 16.7842C279.27 19.4463 280.412 23.2129 280.412 28.084V30.8594H260.39C260.597 33.3893 261.438 35.3906 262.91 36.8633C264.402 38.3359 266.271 39.0723 268.518 39.0723C271.671 39.0723 274.238 37.7979 276.221 35.249L279.931 38.7891C278.703 40.6204 277.061 42.0459 275.003 43.0654C272.964 44.0661 270.67 44.5664 268.121 44.5664ZM267.3 18.3135C265.412 18.3135 263.882 18.9743 262.712 20.2959C261.56 21.6175 260.824 23.4583 260.503 25.8184H273.615V25.3086C273.464 23.0052 272.851 21.2682 271.774 20.0977C270.698 18.9082 269.207 18.3135 267.3 18.3135Z\" fill=\"#F1C833\"/>\r\n            </svg> */}\r\n            <Link to=\"/\">\r\n              <img width=\"100\" src=\"logo.png\" alt=\"logo\" />\r\n            </Link>\r\n          </Box>\r\n        {/* </Link> */}\r\n        <Box style={{ marginLeft: '0', backgroundColor: 'gray' }}>\r\n          {routes.map(route => (\r\n              <Link to={route.to} style={{color: \"inherit\", textDecoration: \"none\"}} key={route.to}>\r\n                <Tab style={{ fontSize: \"1.2rem\", textTransform: \"capitalize\" }} label={route.name}/>\r\n              </Link>\r\n            ))}\r\n        </Box>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default TopNav;\r\n"]},"metadata":{},"sourceType":"module"}