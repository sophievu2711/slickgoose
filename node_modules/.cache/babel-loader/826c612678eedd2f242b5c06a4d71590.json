{"ast":null,"code":"import _slicedToArray from\"D:\\\\Lumiere\\\\Project\\\\marketing\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";// Generic customised Modal pattern\n// Author: Nga Vu\nimport{Box,Button,Dialog,DialogContent,DialogTitle,IconButton}from'@material-ui/core';import CloseIcon from'@material-ui/icons/Close';import React from'react';var SingleModal=function SingleModal(props){var buttonTitle=props.buttonTitle,modalTitle=props.modalTitle,buttonStartIcon=props.buttonStartIcon,small=props.small,variant=props.variant,color=props.color,backgroundColor=props.backgroundColor;var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),open=_React$useState2[0],setOpen=_React$useState2[1];var handleClickOpen=function handleClickOpen(){setOpen(true);};var handleClose=function handleClose(){setOpen(false);};return/*#__PURE__*/React.createElement(React.Fragment,null,buttonTitle&&/*#__PURE__*/React.createElement(Button,{onClick:handleClickOpen,startIcon:buttonStartIcon||'',size:small?'small':'medium',style:{color:\"\".concat(color),backgroundColor:\"\".concat(backgroundColor)}},buttonTitle),!buttonTitle&&buttonStartIcon&&/*#__PURE__*/React.createElement(IconButton,{onClick:handleClickOpen},buttonStartIcon),/*#__PURE__*/React.createElement(Dialog,{onClose:handleClose,open:open},/*#__PURE__*/React.createElement(Box,{display:\"flex\"},/*#__PURE__*/React.createElement(Box,{flexGrow:1},/*#__PURE__*/React.createElement(DialogTitle,null,modalTitle)),/*#__PURE__*/React.createElement(Box,{p:1},/*#__PURE__*/React.createElement(IconButton,{onClick:handleClose},/*#__PURE__*/React.createElement(CloseIcon,null)))),/*#__PURE__*/React.createElement(DialogContent,{style:{textAlign:'center'},dividers:true},props.children)));};export default SingleModal;","map":{"version":3,"sources":["D:/Lumiere/Project/marketing/src/components/simpleModal.tsx"],"names":["Box","Button","Dialog","DialogContent","DialogTitle","IconButton","CloseIcon","React","SingleModal","props","buttonTitle","modalTitle","buttonStartIcon","small","variant","color","backgroundColor","useState","open","setOpen","handleClickOpen","handleClose","textAlign","children"],"mappings":"2JAAA;AACA;AACA,OACEA,GADF,CACOC,MADP,CACeC,MADf,CACuBC,aADvB,CACsCC,WADtC,CACmDC,UADnD,KAEO,mBAFP,CAGA,MAAOC,CAAAA,SAAP,KAAsB,0BAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAeA,GAAMC,CAAAA,WAAuC,CAAG,QAA1CA,CAAAA,WAA0C,CAACC,KAAD,CAAW,IAEvDC,CAAAA,WAFuD,CAGrDD,KAHqD,CAEvDC,WAFuD,CAE1CC,UAF0C,CAGrDF,KAHqD,CAE1CE,UAF0C,CAE9BC,eAF8B,CAGrDH,KAHqD,CAE9BG,eAF8B,CAEbC,KAFa,CAGrDJ,KAHqD,CAEbI,KAFa,CAENC,OAFM,CAGrDL,KAHqD,CAENK,OAFM,CAEGC,KAFH,CAGrDN,KAHqD,CAEGM,KAFH,CAEUC,eAFV,CAGrDP,KAHqD,CAEUO,eAFV,qBAIjCT,KAAK,CAACU,QAAN,CAAe,KAAf,CAJiC,oDAIlDC,IAJkD,qBAI5CC,OAJ4C,qBAKzD,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5BD,OAAO,CAAC,IAAD,CAAP,CACD,CAFD,CAGA,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBF,OAAO,CAAC,KAAD,CAAP,CACD,CAFD,CAGA,mBACE,oBAAC,KAAD,CAAO,QAAP,MAEIT,WAAW,eAET,oBAAC,MAAD,EACE,OAAO,CAAEU,eADX,CAEE,SAAS,CAAER,eAAe,EAAI,EAFhC,CAGE,IAAI,CAAEC,KAAK,CAAG,OAAH,CAAa,QAH1B,CAIE,KAAK,CAAE,CAAEE,KAAK,WAAKA,KAAL,CAAP,CAAqBC,eAAe,WAAKA,eAAL,CAApC,CAJT,EAKEN,WALF,CAJN,CAcK,CAACA,WAAD,EAAgBE,eAAjB,eACG,oBAAC,UAAD,EAAY,OAAO,CAAEQ,eAArB,EAAuCR,eAAvC,CAfP,cAiBE,oBAAC,MAAD,EAAQ,OAAO,CAAES,WAAjB,CAA8B,IAAI,CAAEH,IAApC,eACE,oBAAC,GAAD,EAAK,OAAO,CAAC,MAAb,eACE,oBAAC,GAAD,EAAK,QAAQ,CAAE,CAAf,eACE,oBAAC,WAAD,MACGP,UADH,CADF,CADF,cAME,oBAAC,GAAD,EAAK,CAAC,CAAE,CAAR,eACE,oBAAC,UAAD,EAAY,OAAO,CAAEU,WAArB,eACE,oBAAC,SAAD,MADF,CADF,CANF,CADF,cAaE,oBAAC,aAAD,EAAe,KAAK,CAAE,CAAEC,SAAS,CAAE,QAAb,CAAtB,CAA+C,QAAQ,KAAvD,EACGb,KAAK,CAACc,QADT,CAbF,CAjBF,CADF,CAqCD,CAhDD,CAkDA,cAAef,CAAAA,WAAf","sourcesContent":["// Generic customised Modal pattern\r\n// Author: Nga Vu\r\nimport {\r\n  Box, Button, Dialog, DialogContent, DialogTitle, IconButton,\r\n} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport React from 'react';\r\n\r\ninterface SingleModalProps {\r\n  // Label text for toggled button (optional)\r\n  buttonTitle?: any;\r\n  // Icon for toggled button (optional)\r\n  buttonStartIcon?: any;\r\n  // Title for content in the modal (required)\r\n  modalTitle: string;\r\n  // The following props are used to adjust style of toggled button\r\n  small?: boolean;\r\n  variant?: 'outlined' | 'text' | 'contained';\r\n  color?: string;\r\n  backgroundColor?: string;\r\n}\r\nconst SingleModal: React.FC<SingleModalProps> = (props) => {\r\n  const {\r\n    buttonTitle, modalTitle, buttonStartIcon, small, variant, color, backgroundColor,\r\n  } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {\r\n        buttonTitle\r\n        && (\r\n          <Button\r\n            onClick={handleClickOpen}\r\n            startIcon={buttonStartIcon || ''}\r\n            size={small ? 'small' : 'medium'}\r\n            style={{ color: `${color}`, backgroundColor: `${backgroundColor}` }}\r\n          >{buttonTitle}\r\n          </Button>\r\n        )\r\n      }\r\n      {\r\n        (!buttonTitle && buttonStartIcon)\r\n        && <IconButton onClick={handleClickOpen}>{buttonStartIcon}</IconButton>\r\n      }\r\n      <Dialog onClose={handleClose} open={open}>\r\n        <Box display=\"flex\">\r\n          <Box flexGrow={1}>\r\n            <DialogTitle>\r\n              {modalTitle}\r\n            </DialogTitle>\r\n          </Box>\r\n          <Box p={1}>\r\n            <IconButton onClick={handleClose}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Box>\r\n        <DialogContent style={{ textAlign: 'center' }} dividers>\r\n          {props.children}\r\n        </DialogContent>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SingleModal;\r\n"]},"metadata":{},"sourceType":"module"}