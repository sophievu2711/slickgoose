{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.borderWidth = exports.buttonStyle = exports.colorStyle = exports.textStyle = exports.disabled = exports.active = exports.focus = exports.hover = exports.left = exports.bottom = exports.right = exports.top = exports.zIndex = exports.position = exports.backgroundRepeat = exports.backgroundPosition = exports.backgroundSize = exports.backgroundImage = exports.background = exports.boxShadow = exports.borderRadius = exports.borderColor = exports.borders = exports.borderLeft = exports.borderBottom = exports.borderRight = exports.borderTop = exports.border = exports.gridTemplateRows = exports.gridTemplateColumns = exports.gridAutoRows = exports.gridAutoColumns = exports.gridAutoFlow = exports.gridRow = exports.gridColumn = exports.gridRowGap = exports.gridColumnGap = exports.gridGap = exports.order = exports.alignSelf = exports.justifySelf = exports.flex = exports.flexDirection = exports.flexBasis = exports.flexWrap = exports.justifyContent = exports.alignContent = exports.alignItems = exports.verticalAlign = exports.ratio = exports.ratioPadding = exports.size = exports.sizeHeight = exports.sizeWidth = exports.minHeight = exports.maxHeight = exports.height = exports.minWidth = exports.maxWidth = exports.display = exports.letterSpacing = exports.fontWeight = exports.lineHeight = exports.textAlign = exports.fontFamily = exports.opacity = exports.color = exports.bgColor = exports.textColor = exports.fontSize = exports.width = exports.space = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _space = require('./space');\n\nObject.defineProperty(exports, 'space', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_space).default;\n  }\n});\n\nvar _util = require('./util');\n\nvar util = _interopRequireWildcard(_util);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar width = exports.width = (0, _util.responsiveStyle)({\n  prop: 'width',\n  alias: 'w',\n  getter: _util.getWidth\n});\nvar fontSize = exports.fontSize = (0, _util.responsiveStyle)({\n  prop: 'fontSize',\n  alias: 'f',\n  key: 'fontSizes',\n  numberToPx: true\n});\nvar textColor = exports.textColor = (0, _util.responsiveStyle)({\n  prop: 'color',\n  key: 'colors'\n});\nvar bgColor = exports.bgColor = (0, _util.responsiveStyle)({\n  prop: 'bg',\n  cssProperty: 'backgroundColor',\n  key: 'colors'\n});\n\nvar color = exports.color = function color(props) {\n  return _extends({}, textColor(props), bgColor(props));\n};\n\ncolor.propTypes = _extends({}, textColor.propTypes, bgColor.propTypes);\nvar opacity = exports.opacity = (0, _util.responsiveStyle)({\n  prop: 'opacity'\n}); // typography\n\nvar fontFamily = exports.fontFamily = (0, _util.style)({\n  prop: 'fontFamily',\n  alias: 'font',\n  key: 'fonts'\n});\nvar textAlign = exports.textAlign = (0, _util.responsiveStyle)({\n  prop: 'textAlign',\n  // for backwards compatibility - will cause bugs when used with alignItems\n  alias: 'align'\n});\nvar lineHeight = exports.lineHeight = (0, _util.responsiveStyle)({\n  prop: 'lineHeight',\n  key: 'lineHeights'\n});\nvar fontWeight = exports.fontWeight = (0, _util.style)({\n  prop: 'fontWeight',\n  key: 'fontWeights'\n});\nvar letterSpacing = exports.letterSpacing = (0, _util.style)({\n  prop: 'letterSpacing',\n  key: 'letterSpacings',\n  numberToPx: true\n}); // layout\n\nvar display = exports.display = (0, _util.responsiveStyle)({\n  prop: 'display'\n});\nvar maxWidth = exports.maxWidth = (0, _util.responsiveStyle)({\n  prop: 'maxWidth',\n  key: 'maxWidths',\n  numberToPx: true\n});\nvar minWidth = exports.minWidth = (0, _util.responsiveStyle)({\n  prop: 'minWidth',\n  key: 'minWidths',\n  numberToPx: true\n});\nvar height = exports.height = (0, _util.responsiveStyle)({\n  prop: 'height',\n  key: 'heights',\n  numberToPx: true\n});\nvar maxHeight = exports.maxHeight = (0, _util.responsiveStyle)({\n  prop: 'maxHeight',\n  key: 'maxHeights',\n  numberToPx: true\n});\nvar minHeight = exports.minHeight = (0, _util.responsiveStyle)({\n  prop: 'minHeight',\n  key: 'minHeights',\n  numberToPx: true\n});\nvar sizeWidth = exports.sizeWidth = (0, _util.responsiveStyle)({\n  prop: 'size',\n  cssProperty: 'width',\n  numberToPx: true\n});\nvar sizeHeight = exports.sizeHeight = (0, _util.responsiveStyle)({\n  prop: 'size',\n  cssProperty: 'height',\n  numberToPx: true\n});\n\nvar size = exports.size = function size(props) {\n  return (0, _util.merge)(sizeHeight(props), sizeWidth(props));\n};\n\nsize.propTypes = _extends({}, sizeWidth.propTypes, sizeHeight.propTypes);\nvar ratioPadding = exports.ratioPadding = (0, _util.style)({\n  prop: 'ratio',\n  cssProperty: 'paddingBottom',\n  getter: function getter(n) {\n    return n * 100 + '%';\n  }\n});\n\nvar ratio = exports.ratio = function ratio(props) {\n  return props.ratio ? _extends({\n    height: 0\n  }, ratioPadding(props)) : null;\n};\n\nratio.propTypes = _extends({}, ratioPadding.propTypes);\nvar verticalAlign = exports.verticalAlign = (0, _util.style)({\n  prop: 'verticalAlign'\n}); // flexbox\n\nvar alignItems = exports.alignItems = (0, _util.responsiveStyle)({\n  prop: 'alignItems',\n  // for backwards compatibility - will cause bugs when used with textAlign\n  alias: 'align'\n});\nvar alignContent = exports.alignContent = (0, _util.responsiveStyle)({\n  prop: 'alignContent'\n});\nvar justifyContent = exports.justifyContent = (0, _util.responsiveStyle)({\n  prop: 'justifyContent',\n  // for backwards compatibility\n  alias: 'justify'\n}); // for backwards compatibility\n\nvar flexWrapShim = function flexWrapShim(n) {\n  return n === true ? 'wrap' : n;\n};\n\nvar flexWrap = exports.flexWrap = (0, _util.responsiveStyle)({\n  prop: 'flexWrap',\n  alias: 'wrap',\n  getter: flexWrapShim\n});\nvar flexBasis = exports.flexBasis = (0, _util.responsiveStyle)({\n  prop: 'flexBasis',\n  getter: _util.getWidth\n});\nvar flexDirection = exports.flexDirection = (0, _util.responsiveStyle)({\n  prop: 'flexDirection'\n});\nvar flex = exports.flex = (0, _util.responsiveStyle)({\n  prop: 'flex'\n});\nvar justifySelf = exports.justifySelf = (0, _util.responsiveStyle)({\n  prop: 'justifySelf'\n});\nvar alignSelf = exports.alignSelf = (0, _util.responsiveStyle)({\n  prop: 'alignSelf'\n});\nvar order = exports.order = (0, _util.responsiveStyle)({\n  prop: 'order'\n}); // grid\n\nvar gridGap = exports.gridGap = (0, _util.responsiveStyle)({\n  prop: 'gridGap',\n  numberToPx: true,\n  key: 'space'\n});\nvar gridColumnGap = exports.gridColumnGap = (0, _util.responsiveStyle)({\n  prop: 'gridColumnGap',\n  numberToPx: true,\n  key: 'space'\n});\nvar gridRowGap = exports.gridRowGap = (0, _util.responsiveStyle)({\n  prop: 'gridRowGap',\n  numberToPx: true,\n  key: 'space'\n});\nvar gridColumn = exports.gridColumn = (0, _util.responsiveStyle)({\n  prop: 'gridColumn'\n});\nvar gridRow = exports.gridRow = (0, _util.responsiveStyle)({\n  prop: 'gridRow'\n});\nvar gridAutoFlow = exports.gridAutoFlow = (0, _util.style)({\n  prop: 'gridAutoFlow'\n});\nvar gridAutoColumns = exports.gridAutoColumns = (0, _util.style)({\n  prop: 'gridAutoColumns'\n});\nvar gridAutoRows = exports.gridAutoRows = (0, _util.style)({\n  prop: 'gridAutoRows'\n});\nvar gridTemplateColumns = exports.gridTemplateColumns = (0, _util.responsiveStyle)({\n  prop: 'gridTemplateColumns'\n});\nvar gridTemplateRows = exports.gridTemplateRows = (0, _util.responsiveStyle)({\n  prop: 'gridTemplateRows'\n}); // borders\n\nvar getBorder = function getBorder(n) {\n  return util.num(n) && n > 0 ? n + 'px solid' : n;\n};\n\nvar border = exports.border = (0, _util.responsiveStyle)({\n  prop: 'border',\n  key: 'borders',\n  getter: getBorder\n});\nvar borderTop = exports.borderTop = (0, _util.responsiveStyle)({\n  prop: 'borderTop',\n  key: 'borders',\n  getter: getBorder\n});\nvar borderRight = exports.borderRight = (0, _util.responsiveStyle)({\n  prop: 'borderRight',\n  key: 'borders',\n  getter: getBorder\n});\nvar borderBottom = exports.borderBottom = (0, _util.responsiveStyle)({\n  prop: 'borderBottom',\n  key: 'borders',\n  getter: getBorder\n});\nvar borderLeft = exports.borderLeft = (0, _util.responsiveStyle)({\n  prop: 'borderLeft',\n  key: 'borders',\n  getter: getBorder\n});\n\nvar borders = exports.borders = function borders(props) {\n  return _extends({}, border(props), borderTop(props), borderRight(props), borderBottom(props), borderLeft(props));\n};\n\nborders.propTypes = _extends({}, border.propTypes, borderTop.propTypes, borderRight.propTypes, borderBottom.propTypes, borderLeft.propTypes);\nvar borderColor = exports.borderColor = (0, _util.style)({\n  prop: 'borderColor',\n  key: 'colors'\n});\nvar borderRadius = exports.borderRadius = (0, _util.style)({\n  prop: 'borderRadius',\n  key: 'radii',\n  numberToPx: true\n});\nvar boxShadow = exports.boxShadow = (0, _util.style)({\n  prop: 'boxShadow',\n  key: 'shadows'\n}); // backgrounds\n\nvar background = exports.background = (0, _util.style)({\n  prop: 'background'\n});\nvar backgroundImage = exports.backgroundImage = (0, _util.style)({\n  prop: 'backgroundImage',\n  alias: 'bgImage',\n  getter: function getter(n) {\n    return 'url(' + n + ')';\n  }\n});\nvar backgroundSize = exports.backgroundSize = (0, _util.style)({\n  prop: 'backgroundSize',\n  alias: 'bgSize'\n});\nvar backgroundPosition = exports.backgroundPosition = (0, _util.style)({\n  prop: 'backgroundPosition',\n  alias: 'bgPosition'\n});\nvar backgroundRepeat = exports.backgroundRepeat = (0, _util.style)({\n  prop: 'backgroundRepeat',\n  alias: 'bgRepeat'\n}); // position\n\nvar position = exports.position = (0, _util.responsiveStyle)({\n  prop: 'position'\n});\nvar zIndex = exports.zIndex = (0, _util.style)({\n  prop: 'zIndex'\n});\nvar top = exports.top = (0, _util.responsiveStyle)({\n  prop: 'top',\n  numberToPx: true\n});\nvar right = exports.right = (0, _util.responsiveStyle)({\n  prop: 'right',\n  numberToPx: true\n});\nvar bottom = exports.bottom = (0, _util.responsiveStyle)({\n  prop: 'bottom',\n  numberToPx: true\n});\nvar left = exports.left = (0, _util.responsiveStyle)({\n  prop: 'left',\n  numberToPx: true\n}); // pseudos\n\nvar hover = exports.hover = (0, _util.pseudoStyle)({\n  prop: 'hover',\n  pseudoclass: 'hover',\n  keys: {\n    color: 'colors',\n    backgroundColor: 'colors',\n    borderColor: 'colors',\n    boxShadow: 'shadows'\n  }\n});\nvar focus = exports.focus = (0, _util.pseudoStyle)({\n  prop: 'focus',\n  keys: {\n    color: 'colors',\n    backgroundColor: 'colors',\n    borderColor: 'colors',\n    boxShadow: 'shadows'\n  }\n});\nvar active = exports.active = (0, _util.pseudoStyle)({\n  prop: 'active',\n  keys: {\n    color: 'colors',\n    backgroundColor: 'colors',\n    borderColor: 'colors',\n    boxShadow: 'shadows'\n  }\n});\nvar disabled = exports.disabled = (0, _util.pseudoStyle)({\n  prop: 'disabledStyle',\n  pseudoclass: 'disabled',\n  keys: {\n    color: 'colors',\n    backgroundColor: 'colors',\n    borderColor: 'colors',\n    boxShadow: 'shadows'\n  }\n});\nvar textStyle = exports.textStyle = (0, _util.complexStyle)({\n  prop: 'textStyle',\n  key: 'textStyles'\n});\nvar colorStyle = exports.colorStyle = (0, _util.complexStyle)({\n  prop: 'colors',\n  key: 'colorStyles'\n});\nvar buttonStyle = exports.buttonStyle = (0, _util.complexStyle)({\n  prop: 'buttonStyle',\n  key: 'buttons'\n}); // for backwards-compatibility\n// these will be removed in v3\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar borderWidth = exports.borderWidth = (0, _util.style)({\n  prop: 'borderWidth',\n  cssProperty: 'border',\n  key: 'borderWidths',\n  getter: function getter(v) {\n    if (__DEV__) {\n      console.warn('borderWidth is deprecated. Please use the `borders` utility instead');\n    }\n\n    return getBorder(v);\n  }\n});","map":null,"metadata":{},"sourceType":"script"}